from database.models.profile import ProfileModel
from database.models.user import UserModel
from database.services.search import haversine_distance
from loader import bot


async def send_profile(chat_id: int, profile: ProfileModel) -> None:
    """–û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é –ø–µ—Ä–µ–¥–∞–Ω–Ω—ã–π –≤ —Ñ—É–Ω–∫—Ü–∏—é –ø—Ä–æ—Ñ–∏–ª—å"""
    await bot.send_photo(
        chat_id=chat_id,
        photo=profile.photo,
        caption=f"{profile.name}, {profile.age}, {profile.city}\n{profile.description}",
        parse_mode=None,
    )


async def send_profile_with_dist(user: UserModel, profile: ProfileModel, keyboard=None) -> None:
    """–û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –ø—Ä–æ—Ñ–∏–ª—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Å —Ä–∞—Å—Å—Ç–æ—è–Ω–∏–µ–º –¥–æ –Ω–µ–≥–æ –≤ –∫–∏–ª–æ–º—Ç–µ—Ä–∞—Ö"""
    if profile.city == "üìç":
        distance = haversine_distance(
            user.profile.latitude, user.profile.longitude, profile.latitude, profile.longitude
        )
        city = f"üìç {round(distance, 2)} km"
    else:
        city = profile.city
    await bot.send_photo(
        chat_id=user.id,
        photo=profile.photo,
        caption=f"{profile.name}, {profile.age}, {city}\n{profile.description}",
        reply_markup=keyboard,
        parse_mode=None,
    )
