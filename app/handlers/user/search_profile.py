from random import shuffle

from aiogram import F, types
from aiogram.filters.state import StateFilter
from aiogram.fsm.context import FSMContext

from app.handlers.bot_utils import complaint_to_profile, menu, send_profile
from app.handlers.msg_text import msg_text
from app.keyboards.default.base import search_kb
from app.keyboards.inline.archive import check_archive_ikb
from app.others.states import Search
from app.routers import user_router as router
from database.models import UserModel
from database.services import Match, Profile
from database.services.search import search_profiles

from .cancel import cancel_command


@router.message(F.text == "üîç", StateFilter(None))
async def _search_command(
    message: types.Message, state: FSMContext, user: UserModel, session
) -> None:
    """–ë–æ—Ç –ø–æ–¥–±–∏—Ä–∞–µ—Ç –∞–Ω–∫–µ—Ç—ã, —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–∏–µ –ø—Ä–µ–¥–ø–æ—á—Ç–µ–Ω–∏—è–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, –∏ –ø—Ä–µ–¥–ª–∞–≥–∞–µ—Ç –∏—Ö"""
    await message.answer(msg_text.SEARCH, reply_markup=search_kb)

    if profile_list := await search_profiles(session, user.profile):
        await state.set_state(Search.search)
        await state.update_data(ids=profile_list)

        profile = await Profile.get(session, profile_list[0])
        await send_profile(message.from_user.id, profile)
    else:
        await message.answer(msg_text.INVALID_PROFILE_SEARCH)
        await menu(message.from_user.id)


@router.message(Search.search, F.text.in_(("‚ù§Ô∏è", "üëé", "üí¢")))
async def _search_profile(message: types.Message, state: FSMContext, session) -> None:
    """
    –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –º–æ–∂–µ—Ç –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–æ–≤–∞—Ç—å —Å –∞–Ω–∫–µ—Ç–∞–º–∏, –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–Ω—ã–º–∏ –±–æ—Ç–æ–º,
    —Å—Ç–∞–≤—è –ª–∞–π–∫ –∏–ª–∏ –¥–∏–∑–ª–∞–π–∫.
    –¢–∞–∫–∂–µ –¥–æ—Å—Ç—É–ø–Ω–∞ —Ñ—É–Ω–∫—Ü–∏—è –∂–∞–ª–æ–±—ã –Ω–∞ –∞–Ω–∫–µ—Ç—ã, —Å–æ–¥–µ—Ä–∂–∞—â–∏–µ –Ω–µ–∂–µ–ª–∞—Ç–µ–ª—å–Ω—ã–π –∫–æ–Ω—Ç–µ–Ω—Ç.
    –í—Å–µ –∂–∞–ª–æ–±—ã –æ—Ç–ø—Ä–∞–≤–ª—è—é—Ç—Å—è –≤ –º–æ–¥–µ—Ä–∞—Ç–æ—Ä—Å–∫—É—é –≥—Ä—É–ø–ø—É, –µ—Å–ª–∏ –æ–Ω–∞ —É–∫–∞–∑–∞–Ω–∞ –≤ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞—Ö.
    """
    data = await state.get_data()
    profile_list = data.get("ids", [])
    profile = await Profile.get(session, profile_list[0])

    if message.text == "‚ù§Ô∏è":
        await Match.create(session, message.from_user.id, profile.user_id)
        await message.bot.send_message(
            chat_id=profile.user_id,
            text=msg_text.LIKE_PROFILE,
            reply_markup=check_archive_ikb(),
        )
    elif message.text == "üí¢":
        await message.answer(msg_text.REPORT_TO_PROFILE)
        await complaint_to_profile(
            session=session,
            user=message.from_user,
            profile=profile,
        )
    profile_list.pop(0)
    if profile_list:
        profile = await Profile.get(session, profile_list[0])
        await state.update_data(ids=profile_list)
        await send_profile(message.from_user.id, profile)
    else:
        await message.answer(msg_text.EMPTY_PROFILE_SEARCH)
        await cancel_command(message, state)
